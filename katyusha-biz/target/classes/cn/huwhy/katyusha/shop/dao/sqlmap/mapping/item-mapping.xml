<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.huwhy.katyusha.shop.dao.ItemDao">
  <sql id="COLUMNS">
    id,`category_id`,title,prop_desc,summary,main_img,images,
    phy_type,status,sale_num,eval_num,low_price,high_price,
    low_market_price,high_market_price,sku_ids,total_stock,
    out_code,commission_rate, modified, created
  </sql>
  
  <insert id="save" parameterType="ItemPo">
    insert into item(
    <include refid="COLUMNS"/>
    )values(
    #{id},#{categoryId},#{title},#{propDesc},#{summary},#{mainImg},
    #{images},#{phyType.value},#{status.value},#{saleNum},#{evalNum},
    #{lowPrice},#{highPrice},#{lowMarketPrice},#{highMarketPrice},#{skuIds},
    #{totalStock},#{outCode},#{commissionRate},#{modified},#{created}
    ) on duplicate key update
    `category_id`=VALUES(`category_id`),`title`=VALUES(`title`),
    `prop_desc`=VALUES(`prop_desc`),`summary`=VALUES(`summary`),
    `main_img`=VALUES(`main_img`),`images`=VALUES(`images`),
    `phy_type`=VALUES(`phy_type`),`low_price`=VALUES(`low_price`),
    `high_price`=VALUES(`high_price`),`low_market_price`=VALUES(`low_market_price`),
    `high_market_price`=VALUES(`high_market_price`),`total_stock`=VALUES(`total_stock`),
    `out_code`=VALUES(`out_code`),`commission_rate`=VALUES(`commission_rate`),
    `sku_ids`=VALUES(`sku_ids`),`modified`=VALUES(`modified`)
  </insert>
  
  <update id="shelf">
    update item set status=#{status.value} where id=#{id}
  </update>
  
  <update id="plusSaleNum">
    update item set sale_num=sale_num+#{num} where id=#{id}
  </update>
  
  <insert id="saveContent" parameterType="ItemPo">
    insert into item_content(id, content)
    VALUES (#{id}, #{content})
    on duplicate key update content=VALUES(content)
  </insert>
  
  <select id="get" resultType="ItemPo" parameterType="java.lang.Long">
    select
    <include refid="COLUMNS"/>
    from item where id = #{id}
  </select>
  <select id="listByIds" resultType="ItemPo" parameterType="java.util.Collection">
    select
    <include refid="COLUMNS"/>
    from item where id in (
    <foreach collection="ids" item="id" index="index" separator=",">
      #{ids[${index}]}
    </foreach>
    )
  </select>
  
  <select id="getContent" resultType="java.lang.String" parameterType="java.lang.Long">
    select content from item_content where id=#{id}
  </select>
  
  <select id="findPaging" resultType="ItemPo">
    select
    <include refid="COLUMNS"/>
    from item
    <where>
      <if test="categoryId > 0">
        and category_id = #{categoryId}
      </if>
      <if test="title != null and title != ''">
        and title like #{title}
      </if>
      <if test="phyType != null">
        and phy_type = #{phyType.value}
      </if>
      <if test="status != null">
        and status = #{status.value}
      </if>
    </where>
  </select>
  
  <select id="nextId" resultType="Long">
    select next_val('seq_item')
  </select>
</mapper>
