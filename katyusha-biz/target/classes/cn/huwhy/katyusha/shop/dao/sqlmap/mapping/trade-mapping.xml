<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.huwhy.katyusha.shop.dao.TradeDao">
  <sql id="COLUMNS">
    id,`member_id`,total_amount,discount_amount,total_post_fee,
    total_payment,status,pay_time,consign_time,express_name,
    express_code,plan_receive_time,confirm_receive_time,
    receive_person,receive_province,receive_city,receive_district,
    receive_address,receive_phone,receive_zip,buyer_memo,card_no,
    real_name,order_ids,end_time,modified,created
  </sql>
  
  <insert id="save" parameterType="TradePo">
    insert into trade(
    <include refid="COLUMNS"/>
    )values(
    #{id},#{memberId},#{totalAmount},#{discountAmount},#{totalPostFee},
    #{totalPayment},#{status.value},#{payTime},#{consignTime},#{expressName},
    #{expressCode},#{planReceiveTime},#{confirmReceiveTime},#{receivePerson},
    #{receiveProvince},#{receiveCity},#{receiveDistrict},#{receiveAddress},
    #{receivePhone},#{receiveZip},#{buyerMemo},#{cardNo},#{realName},
    #{orderIds},#{endTime},#{modified},#{created}
    ) on duplicate key update
    `status`=VALUES(`status`),`pay_time`=VALUES(`pay_time`),
    `consign_time`=VALUES(`consign_time`),`express_name`=VALUES(`express_name`),
    `express_code`=VALUES(`express_code`),`plan_receive_time`=VALUES(`plan_receive_time`),
    `confirm_receive_time`=VALUES(`confirm_receive_time`),`end_time`=VALUES(`end_time`),
    `modified`=VALUES(`modified`)
  </insert>
  
  <select id="get" resultType="TradePo" parameterType="java.lang.Long">
    select
    <include refid="COLUMNS"/>
    from trade where id = #{id}
  </select>
  
  <select id="findPaging" resultType="TradePo">
    select
    <include refid="COLUMNS"/>
    from trade
    <where>
      <if test="id > 0">
        and id = #{id}
      </if>
      <if test="memberId > 0">
        and member_id=#{memberId}
      </if>
      <if test="status != null">
        and status=#{status.value}
      </if>
      <if test="payTimeFrom != null">
        and pay_time &gt;=#{payTimeFrom}
      </if>
      <if test="payTimeTo != null">
        and pay_time &lt; #{payTimeTo}
      </if>
      <if test="createdFrom != null">
        and pay_time &gt;=#{createdFrom}
      </if>
      <if test="createdTo != null">
        and pay_time &lt; #{createdTo}
      </if>
    </where>
  </select>
  
  <update id="setStatus">
    update trade set status=#{status.value} where id=#{id}
  </update>
  
  <select id="nextId" resultType="Long">
    select next_val('seq_trade')
  </select>
</mapper>
