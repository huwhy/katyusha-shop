<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.huwhy.katyusha.shop.dao.OrderDao">
  <sql id="COLUMNS">
    id,`tid`,item_id,title,sku_id,spec,barcode,
    num,price,post_fee,total_amount,payment,status,
    refund_status,evaluate,commission_fee,modified,
    end_time,created
  </sql>
  
  <insert id="save" parameterType="OrderPo">
    insert into orders(
    <include refid="COLUMNS"/>
    )values(
    #{id},#{tid},#{itemId},#{title},#{skuId},#{spec},#{barcode},
    #{num},#{price},#{postFee},#{totalAmount},#{payment},
    #{status.value},#{refundStatus.value},#{evaluate},
    #{commissionFee},#{modified},#{endTime},#{created}
    ) on duplicate key update
    `status`=VALUES(`status`),`refund_status`=VALUES(`refund_status`),
    `evaluate`=VALUES(`evaluate`),`modified`=VALUES(`modified`),
    `end_time`=VALUES(`end_time`)
  </insert>
  
  <insert id="saves" parameterType="java.util.List">
    insert into orders(
    <include refid="COLUMNS"/>
    )values
    <foreach collection="list" item="item" index="index"
             separator=",">
      (
      #{item.id},#{item.tid},#{item.itemId},#{item.title},#{item.skuId},#{item.spec},#{item.barcode},
      #{item.num},#{item.price},#{item.postFee},#{item.totalAmount},#{item.payment},
      #{item.status.value},#{item.refundStatus.value},#{item.evaluate},
      #{item.commissionFee},#{item.modified},#{item.endTime},#{item.created}
      )
    </foreach>
    on duplicate key update
    `status`=VALUES(`status`),`refund_status`=VALUES(`refund_status`),
    `evaluate`=VALUES(`evaluate`),`modified`=VALUES(`modified`),
    `end_time`=VALUES(`end_time`)
  </insert>
  
  <select id="get" resultType="OrderPo" parameterType="java.lang.Long">
    select
    <include refid="COLUMNS"/>
    from orders where id = #{id}
  </select>
  
  <select id="getByIds" resultType="OrderPo" parameterType="java.util.Collection">
    select
    <include refid="COLUMNS"/>
    from orders where id in (
    <foreach collection="ids" item="id" index="index" separator=",">
      #{ids[${index}]}
    </foreach>
    )
  </select>
  
  <update id="setStatus">
    update orders set status=#{status.value} where id in (
    <foreach collection="ids" item="id" index="index" separator=",">
      #{ids[${index}]}
    </foreach>
    )
  </update>
  
  <select id="nextId" resultType="Long">
    select next_val('seq_order')
  </select>
</mapper>
